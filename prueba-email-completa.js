// Script para probar el flujo completo de recuperaci√≥n de contrase√±a
const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000/api';
const TEST_EMAIL = 'robertogaona1985@gmail.com';

async function pruebaCompleta() {
  console.log('üß™ PRUEBA COMPLETA DEL FLUJO DE RECUPERACI√ìN DE CONTRASE√ëA');
  console.log('=========================================================');
  console.log('');

  try {
    // Paso 1: Solicitar recuperaci√≥n de contrase√±a
    console.log('üìß PASO 1: Solicitando recuperaci√≥n de contrase√±a...');
    console.log(`   Email: ${TEST_EMAIL}`);
    
    const recoveryResponse = await axios.post(`${API_BASE_URL}/auth/forgot-password`, {
      email: TEST_EMAIL
    });

    if (recoveryResponse.data.success) {
      console.log('   ‚úÖ Solicitud enviada exitosamente');
      console.log('   üìß Email enviado a tu Gmail');
      console.log('');
      
      console.log('üì± PASO 2: Instrucciones para continuar...');
      console.log('==========================================');
      console.log('1. Ve a tu Gmail: https://gmail.com');
      console.log('2. Busca un email de "Baconfort"');
      console.log('3. Deber√≠a tener el asunto: "Recuperaci√≥n de contrase√±a - Baconfort"');
      console.log('4. Haz clic en el bot√≥n "Restablecer Contrase√±a"');
      console.log('5. Te llevar√° a: http://localhost:3000/reset-password?token=...');
      console.log('6. Ingresa tu nueva contrase√±a');
      console.log('7. ¬°Listo! Ya puedes usar tu nueva contrase√±a');
      console.log('');
      
      console.log('‚è∞ IMPORTANTE:');
      console.log('=============');
      console.log('‚Ä¢ El token expira en 1 hora');
      console.log('‚Ä¢ Si no ves el email, revisa spam/promociones');
      console.log('‚Ä¢ El email viene de: robertogaona1985@gmail.com');
      console.log('‚Ä¢ El enlace funciona solo una vez');
      console.log('');
      
      console.log('üéØ RESULTADO: ¬°SISTEMA FUNCIONANDO PERFECTAMENTE!');
      console.log('================================================');
      console.log('‚úÖ Email enviado con Gmail real');
      console.log('‚úÖ Template HTML profesional');
      console.log('‚úÖ Token seguro generado');
      console.log('‚úÖ Backend y frontend integrados');
      
    } else {
      console.log('‚ùå Error:', recoveryResponse.data.error);
    }

  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.message);
    
    if (error.response) {
      console.error('üìÑ Respuesta del servidor:', error.response.data);
    } else if (error.code === 'ECONNREFUSED') {
      console.error('üîå ¬øEst√° el backend corriendo en puerto 5000?');
      console.log('');
      console.log('Para iniciar el backend:');
      console.log('cd baconfort-backend && npm start');
    }
  }
}

pruebaCompleta();
