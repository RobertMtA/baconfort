const mongoose = require('mongoose');
require('dotenv').config();

async function createUniqueReviews() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úì Conectado a MongoDB');
    
    const Review = mongoose.model('Review', new mongoose.Schema({}, { strict: false }));
    
    // Generar timestamp √∫nico
    const timestamp = Date.now();
    
    // Crear rese√±as para propiedades √∫nicas que no tengan rese√±as ya
    const uniqueReviews = [
      {
        propertyId: `test-property-1-${timestamp}`,
        guestName: 'Ana Garc√≠a Nueva',
        guestEmail: `ana${timestamp}@test.com`,
        rating: 5,
        comment: 'Excelente lugar, muy recomendado para familias. Todo muy limpio y organizado.',
        isApproved: false,
        isRejected: false,
        stayDates: {
          checkIn: new Date('2024-12-01'),
          checkOut: new Date('2024-12-05')
        },
        language: 'es',
        source: 'website'
      },
      {
        propertyId: `test-property-2-${timestamp}`,
        guestName: 'Carlos Mendoza Nuevo',
        guestEmail: `carlos${timestamp}@test.com`,
        rating: 4,
        comment: 'Muy buena ubicaci√≥n y precio justo. Solo un detalle con la calefacci√≥n que se resolvi√≥ r√°pido.',
        isApproved: false,
        isRejected: false,
        stayDates: {
          checkIn: new Date('2024-12-10'),
          checkOut: new Date('2024-12-13')
        },
        language: 'es',
        source: 'website'
      },
      {
        propertyId: `test-property-3-${timestamp}`,
        guestName: 'Mar√≠a Rodriguez Nueva',
        guestEmail: `maria${timestamp}@test.com`,
        rating: 3,
        comment: 'El lugar est√° bien pero el wifi no funcionaba correctamente. Por lo dem√°s todo en orden.',
        isApproved: false,
        isRejected: false,
        stayDates: {
          checkIn: new Date('2024-12-15'),
          checkOut: new Date('2024-12-18')
        },
        language: 'es',
        source: 'website'
      }
    ];
    
    console.log('üìù Creando rese√±as con propiedades √∫nicas...');
    
    for (const reviewData of uniqueReviews) {
      const review = new Review(reviewData);
      await review.save();
      console.log(`‚úì Creada rese√±a de ${reviewData.guestName} para ${reviewData.propertyId}`);
    }
    
    console.log('\nüéâ Se crearon 3 nuevas rese√±as pendientes');
    
  } catch (error) {
    console.error('Error:', error);
  } finally {
    mongoose.connection.close();
  }
}

createUniqueReviews();
