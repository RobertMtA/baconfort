// debug-forgot-password.js
// Script para probar directamente la API de recuperaci√≥n de contrase√±a

// Importar m√≥dulo de HTTP para hacer las solicitudes
const http = require('http');
const https = require('https');

// Configuraci√≥n de la solicitud
const testEmail = 'test@example.com';
const API_URL = 'http://localhost:5004/api'; // URL local del API

console.log('üîç Iniciando prueba de recuperaci√≥n de contrase√±a...');
console.log(`üìß Email de prueba: ${testEmail}`);
console.log(`üåê URL de API: ${API_URL}`);

// Funci√≥n para determinar qu√© cliente HTTP usar
function getHttpClient(url) {
  return url.startsWith('https:') ? https : http;
}

// Parsear la URL para obtener host, puerto y ruta
function parseUrl(url) {
  if (url.startsWith('http://')) {
    const withoutProtocol = url.substring(7); // quita 'http://'
    const parts = withoutProtocol.split('/');
    const hostPort = parts[0].split(':');
    const host = hostPort[0];
    const port = hostPort.length > 1 ? parseInt(hostPort[1]) : 80;
    const path = '/' + parts.slice(1).join('/');
    return { host, port, path };
  } else if (url.startsWith('https://')) {
    const withoutProtocol = url.substring(8); // quita 'https://'
    const parts = withoutProtocol.split('/');
    const hostPort = parts[0].split(':');
    const host = hostPort[0];
    const port = hostPort.length > 1 ? parseInt(hostPort[1]) : 443;
    const path = '/' + parts.slice(1).join('/');
    return { host, port, path };
  }
  throw new Error('URL debe comenzar con http:// o https://');
}

// Datos a enviar
const data = JSON.stringify({
  email: testEmail
});

// Configurar la solicitud
const { host, port, path } = parseUrl(`${API_URL}/auth/forgot-password`);

const options = {
  hostname: host,
  port: port,
  path: path,
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
    'Content-Length': data.length
  }
};

console.log('üîÑ Configuraci√≥n de la solicitud:');
console.log(`   - Hostname: ${options.hostname}`);
console.log(`   - Puerto: ${options.port}`);
console.log(`   - Ruta: ${options.path}`);
console.log(`   - M√©todo: ${options.method}`);
console.log(`   - Headers: ${JSON.stringify(options.headers)}`);

// Realizar la solicitud
console.log('üì§ Enviando solicitud...');

const httpClient = getHttpClient(API_URL);
const req = httpClient.request(options, (res) => {
  console.log(`üîÑ C√≥digo de estado: ${res.statusCode}`);
  console.log(`üîÑ Headers: ${JSON.stringify(res.headers)}`);

  let responseData = '';

  // Recibir datos
  res.on('data', (chunk) => {
    responseData += chunk;
  });

  // Al finalizar la recepci√≥n
  res.on('end', () => {
    console.log('üì• Respuesta completa:');
    try {
      const parsedData = JSON.parse(responseData);
      console.log(JSON.stringify(parsedData, null, 2));
      
      if (res.statusCode === 200 && parsedData.success) {
        console.log('‚úÖ Prueba exitosa: El endpoint de recuperaci√≥n de contrase√±a est√° funcionando correctamente.');
        if (parsedData.resetToken) {
          console.log(`üîë Token de reseteo (desarrollo): ${parsedData.resetToken}`);
        }
      } else {
        console.log('‚ùå El endpoint respondi√≥ pero con un estado de error o sin √©xito.');
      }
    } catch (e) {
      console.log('‚ùå Error al parsear la respuesta como JSON:');
      console.log(responseData);
      console.error(e);
    }
  });
});

// Manejar errores
req.on('error', (e) => {
  console.error(`‚ùå Error de conexi√≥n: ${e.message}`);
  console.error('Detalles del error:', e);
  
  console.log('\nüîç Sugerencias de soluci√≥n:');
  console.log('1. Verifica que el servidor de API est√© ejecut√°ndose en http://localhost:5004');
  console.log('2. Comprueba que el endpoint /auth/forgot-password est√© implementado correctamente');
  console.log('3. Aseg√∫rate de que no hay problemas de CORS si est√°s accediendo desde un origen distinto');
  console.log('4. Verifica la conectividad de red y que no haya firewalls bloqueando la conexi√≥n');
});

// Enviar datos
req.write(data);
req.end();

console.log('üîÑ Solicitud enviada, esperando respuesta...');
