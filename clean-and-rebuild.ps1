# clean-and-rebuild.ps1
# Script para limpiar cach√© y reconstruir la aplicaci√≥n completamente

Write-Host "üßπ Iniciando limpieza completa y reconstrucci√≥n..." -ForegroundColor Cyan

# Navegar al directorio frontend
Write-Host "üìÅ Navegando al directorio frontend..." -ForegroundColor Yellow
Set-Location -Path "$PSScriptRoot\baconfort-react"

# Limpiar cache de npm
Write-Host "üßπ Limpiando cach√© de npm..." -ForegroundColor Yellow
npm cache clean --force

# Eliminar node_modules
Write-Host "üßπ Eliminando node_modules..." -ForegroundColor Yellow
if (Test-Path -Path "node_modules") {
    Remove-Item -Recurse -Force "node_modules"
}

# Eliminar dist
Write-Host "üßπ Eliminando directorio dist..." -ForegroundColor Yellow
if (Test-Path -Path "dist") {
    Remove-Item -Recurse -Force "dist"
}

# Eliminar archivos de cach√©
Write-Host "üßπ Eliminando archivos de cach√©..." -ForegroundColor Yellow
if (Test-Path -Path ".vite") {
    Remove-Item -Recurse -Force ".vite"
}

# Reinstalar dependencias
Write-Host "üì¶ Reinstalando dependencias..." -ForegroundColor Yellow
npm install

# Verificar que las variables de entorno est√©n configuradas correctamente
Write-Host "üîç Verificando variables de entorno..." -ForegroundColor Yellow

$envFile = ".env"
$envContent = Get-Content -Path $envFile -Raw
if (-not ($envContent -match "VITE_API_URL=https://baconfort-production-084d.up.railway.app/api")) {
    Write-Host "‚ö†Ô∏è Corrigiendo VITE_API_URL en .env..." -ForegroundColor Yellow
    $envContent = $envContent -replace "VITE_API_URL=.*", "VITE_API_URL=https://baconfort-production-084d.up.railway.app/api"
    $envContent | Out-File -FilePath $envFile -Encoding utf8
}

# Construir la aplicaci√≥n
Write-Host "üèóÔ∏è Reconstruyendo el proyecto..." -ForegroundColor Yellow
npm run build

# Verificar si la construcci√≥n fue exitosa
if (Test-Path -Path "dist") {
    Write-Host "‚úÖ Construcci√≥n exitosa!" -ForegroundColor Green
    
    # Crear archivo .env.local para desarrollo si no existe
    if (-not (Test-Path -Path ".env.local")) {
        Write-Host "üìÑ Creando archivo .env.local para desarrollo..." -ForegroundColor Yellow
        @"
# Archivo .env.local para desarrollo
# Este archivo no se sube a git y tiene prioridad sobre .env

# URL de la API para desarrollo local
# VITE_API_URL=http://localhost:5004/api

# Usar API de producci√≥n para evitar problemas
VITE_API_URL=https://baconfort-production-084d.up.railway.app/api
"@ | Out-File -FilePath ".env.local" -Encoding utf8
    }
    
    # Opcionalmente, podemos previsualizar el resultado
    $previewOption = Read-Host "¬øDeseas previsualizar el resultado? (s/n)"
    if ($previewOption -eq "s") {
        Write-Host "üîç Iniciando vista previa..." -ForegroundColor Yellow
        npm run preview
    }
} else {
    Write-Host "‚ùå Error en la construcci√≥n. Verifica los errores anteriores." -ForegroundColor Red
    exit 1
}

# Volver al directorio ra√≠z
Set-Location -Path $PSScriptRoot
Write-Host "‚ú® Proceso completado! La aplicaci√≥n ha sido limpiada y reconstruida." -ForegroundColor Cyan
Write-Host "üìù Se ha configurado la URL de API a: https://baconfort-production-084d.up.railway.app/api" -ForegroundColor Green
Write-Host "üí° Consejo: Si sigues viendo errores, limpia el cach√© del navegador presionando Ctrl+F5" -ForegroundColor Yellow
